-- Group By with Multiple Fields:

SELECT
	BillingCountry,
	BillingCity,
	avg(Total)
FROM
	invoices
GROUP BY
	BillingCountry, BillingCity
ORDER BY
	BillingCountry;

-- Data Analysis Checkpoint #1:
SELECT
	upper(FirstName) || ' ' || upper(LastName) || ' ' ||
	Address || ' ' || City || ', ' || State || ' ' || substr(PostalCode, 5) AS [Mailing Address]
FROM
	customers
WHERE
	Country = 'USA';

-- Data Analysis Checkpoint #2:
SELECT
	BillingCountry,
	Avg(Total)
FROM
	invoices
WHERE
	BillingCountry LIKE 'U%'
GROUP BY
	BillingCountry;

-- Data Analysis Checkpoint #3:
SELECT
	sum(Total) AS [All-Time Total Sales]
FROM
	invoices;

-- Data Analysis Checkpoint #4:
SELECT
	c.FirstName || ' ' || c.LastName AS [Name],
	i.BillingCity || ', ' || i.BillingCountry AS [Address],
	i.Total
FROM
	invoices AS i
LEFT OUTER JOIN
	customers AS c
ON
	c.CustomerId = i.CustomerId
GROUP BY
	c.CustomerId
ORDER BY
	i.Total DESC
LIMIT 10;

-- Subqueries using Aggregate Functions
SELECT
	round(avg(Total), 2) AS [Average Total]
FROM
	invoices;
	
SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	Total
FROM
	invoices
WHERE Total < (SELECT avg(Total) FROM invoices)
ORDER BY
	Total DESC;

-- Subquery in the SELEct statement:
SELECT
	BillingCity,
	avg(Total) AS [City Average],
	(SELECT
		avg(Total)
	FROM
		invoices) AS [Global Average]
FROM
	invoices
GROUP BY
	BillingCity
ORDER BY
	BillingCity;

-- On your own:
SELECT
	BillingCity,
	round(avg(Total),2) AS [City Average],
	(SELECT
		round(avg(Total),2)
	FROM
		invoices) AS [Global Average]
FROM
	invoices
GROUP BY
	BillingCity
ORDER BY
	BillingCity;

-- Where Clause in a Subquery:
SELECT
	max(Total)
FROM
	invoices
WHERE
	InvoiceDate < '2013-01-01';

SELECT
	InvoiceDate,
	BillingCity,
	Total 
FROM
	invoices
WHERE
	InvoiceDate >= '2013-01-01' AND Total > 
	(SELECT
		max(Total)
	FROM
		invoices
	WHERE
		InvoiceDate < '2013-01-01')

-- On your own:
SELECT
	InvoiceDate,
	BillingCity,
	Total,
	(SELECT
		avg(Total) 
	FROM
		invoices
	WHERE
	InvoiceDate <= '2010=01-01') AS [Global Average]
FROM
	invoices
WHERE
	InvoiceDate <= '2010-01-01' AND Total >
	(SELECT
		avg(Total) 
	FROM
		invoices
	WHERE
	InvoiceDate <= '2010=01-01') 

-- Subqueries without Aggregate Functions
SELECT
	InvoiceDate
FROM
	invoices
WHERE
	InvoiceId = 251;

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM
	invoices
WHERE
	InvoiceDate > 
	(SELECT
		InvoiceDate
	FROM
		invoices
	WHERE
		InvoiceId = 251)

-- Returning Multiple Values from a Subquery:
SELECT
	InvoiceDate
FROM
	invoices
WHERE
	InvoiceId IN (251, 252, 255);

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM
	invoices
WHERE
	InvoiceDate IN 
	(SELECT
		InvoiceDate
	FROM
		invoices
	WHERE
		InvoiceId IN (251,252,255))
	
-- Subqueries and the DISTINCT Clause:
SELECT
	InvoiceId,
	TrackId
FROM
	invoice_items
ORDER BY
	TrackId;

SELECT
	DISTINCT TrackId
FROM
	invoice_items
ORDER BY
	TrackId;

-- Query that lists all tracks that are not in the list by previous query.
SELECT
	TrackId,
	Composer,
	name
FROM
	tracks
WHERE
	TrackId NOT IN 
		(SELECT DISTINCT TrackId
		FROM invoice_items)

-- Data Analysis Checkpoint #1:
SELECT
	count(InvoiceId) 
FROM
	invoices
WHERE
	Total > 
	(SELECT
		avg(Total)
	FROM
		invoices
	WHERE InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31')

-- Data Analysis Checkpoint #2:
SELECT
	c.FirstName,
	c.LastName,
	i.BillingAddress || ', ' || i.BillingCity AS [Address],
	i.Total,
	(SELECT
		round(avg(Total),2)
	FROM
		invoices
	WHERE InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31') AS [Avg Invoice in 2010]
FROM
	invoices AS i
LEFT OUTER JOIN
	customers AS c
ON
	c.CustomerId = i.CustomerId
WHERE
	Total > 
	(SELECT
		avg(Total)
	FROM
		invoices
	WHERE InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31')

-- Data Analysis Checkpoint #3:
	SELECT
	c.FirstName,
	c.LastName,
	i.BillingAddress || ', ' || i.BillingCity AS [Address],
	i.Total,
	(SELECT
		round(avg(Total),2)
	FROM
		invoices
	WHERE InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31') AS [Avg Invoice in 2010]
FROM
	invoices AS i
LEFT OUTER JOIN
	customers AS c
ON
	c.CustomerId = i.CustomerId
WHERE
	Total > 
	(SELECT
		avg(Total)
	FROM
		invoices
	WHERE InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31') AND
	i.BillingCountry = 'USA'
-- There are 40 customers from USA.
